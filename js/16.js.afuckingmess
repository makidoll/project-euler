// arrays are backwards because first index is 0
function addDigitArrays(a1, a2) {
	let n = (a1.length > a2.length)? [a1, a2]: [a2, a1];
	// n[0] is bigger than n[1];

	let out = [];
	let carry = [];
	for (var i=0; i<n[0].length+1; i++) {
		let a = (n[1][i] == undefined)? n[0][i]: n[0][i]+n[1][i];
		if (!a) a = 0;
		if (carry[i]) a += carry[i];

		let c = Math.floor(a/10);
		if (c>0) { // has a carry
			carry[i+1] = c;
		}

		out[i] = a%10;
	}

	for (var i=out.length-1; i>0; i--) { // remove extra 0's at the end
		if (out[out.length-1] == 0) {
			out.splice(out.length-1, 1);
		} else {
			i = 0;
		}
	}

	return out;
}

function digitArray(n) { // flipped
	n=(n+"").split("");

	let out = [];
	for (var i=0; i<n.length; i++) {
		out[n.length-i-1] = parseInt(n[i]);
	}
	return out;
}

// function baseMultiplyDigitArray(arr, num) { // num 0->10
// 	let carry = 0;
// 	let out = [];
// 	for (var i=0; i<arr.length; i++) {
// 		let n = arr[i]*num + carry;

// 		out.push(parseInt((n+"").slice(-1)));

// 		if ((n+"").length>1) {
// 			carry = parseInt((n+"").substring(0, 1));
// 		} else {
// 			carry = 0;
// 		}
// 	}
// }

// 	if (carry>0) out.push(carry);

// 	return out;
// }

function addZero(num, amount) { // amount of time to multiply by 10
	if (amount<0) amount = 0;
	num = num+"";
	for (var i=0; i<amount; i++) {
		num = num.concat("0");
	}

	return parseInt(num);
}

function multiplyDigitArrays(a1, a2) {
	// https://en.wikipedia.org/wiki/Multiplication_algorithms

	let out = [];

	// multiply all bases and add
	for (var x=0; x<a1.length; x++) {
		for (var y=0; y<a2.length; y++) {
			let num = digitArray(addZero(a1[x]*a2[y], x+y));
			out.push(num);
		}
	}

	// add all together
	for (var i=1; i<out.length; i++) {
		out[0] = addDigitArrays(out[0], out[i])
	}

	return out[0];
}

function powerToDigitArray(arr, powerTo) {
	let out = arr;
	for (var i=1; i<powerTo; i++) {
		out = multiplyDigitArrays(out, arr);
	}

	return out;
}

let arr = powerToDigitArray([2], 100);
let out = 0;
for (var i=0; i<arr.length; i++) {
	out += arr[i]
}

console.log(arr);
console.log(out);